#!/usr/bin/env python2
# -*- coding: utf-8 -*-
"""
Created on Fri May 19 18:40:06 2017

@author: BrianzChang
"""

Brute force:

    Check the number one by one and initiate a counter to count # of found ugly number

Dynamic Programming:

    All ugly numbers can be constructed by following equation:
    2^(i2) * 3^(i3) * 5^(i5)

    However we need to return the n-th ugly number, i.e., we need to know the sorted sequence
    
    How to construct the sorted sequence composed of ugly numbers?

    Start with ans = [1]
    Second number should be min(1*2, 1*3, 1*5)
    - > ans = [1, 2]

    How to determine third number in the sequence?




    min(2*2, 1*3, 1*5), i.e., min( ans[1]*2, ans[0]*3, ans[0]*5 )
    - > ans = [1, 2, 3]
    The forth ugly number is min( ans[1]*2, ans[1]*3, ans[0]*5 )
    - > ans = [1, 2, 3, 4]

    Pseudo code:
    i2, i3, i5 = 0, 0, 0
    val = min( ans[i2]*2, ans[i3]*3, ans[i5]*5 )
    if val == ans[i2]*2:
        i2 += 1
    elif val == ans[i3]*2:
        i3 += 1
    elif val == ans[i5]*2:
        i5 += 1
    ans.append(val)


    Error - > should use "if" instead of "elif"