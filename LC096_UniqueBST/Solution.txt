#!/usr/bin/env python2
# -*- coding: utf-8 -*-
"""
Created on Thu May 11 01:04:56 2017

@author: BrianzChang
"""

Given n, how many structurally unique BST's (binary search trees) that store values 1...n?
                                            
Use n = 3 as example:

1     1      2      3      3
 \     \    / \    /      /
  2     3  1   3  2      1
   \     \       /        \
    3     2     1          2
    
If root is the smallest or largest, all nodes will be sent to the same branch
    -> # of unique BST for this root = # of unique BST for n-1, ans[n-1]

If root is in between smallest and largest
    -> all smaller numbers will be sent to left branch, others to right branch
    -> e.g., 1 2 3 "4" 5 6, use 4 as root
    -> left branch: ans[3], right branch: ans[2]
    -> # of unique BST for this root = ans[3] * ans[2]
